
.mat-expansion-panel-header {
  display: flex;
  flex-direction: row;
  align-items: center;
  padding: 0 24px;
  border-radius: inherit;

  &:focus,
  &:hover {
    outline: none;
  }

  &.mat-expanded:focus,
  &.mat-expanded:hover, {
    background: inherit;
  }

  &:not([aria-disabled='true']) {
    cursor: pointer;
  }

  // If the panel, that the header is in, is inside an element being animated by Angular,
  // the default behavior is to block all child animations. This means that the header's
  // height won't kick in until the parent animation is done. We add a fallback to the
  // header's default height. If the animations aren't blocked, these styles will be overridden
  // by the inline styles from the animations module.
  .ng-animating .mat-expansion-panel & {
    min-height: 48px;
  }

  .ng-animating .mat-expansion-panel.mat-expanded & {
    min-height: 64px;
  }
}

.mat-content {
  display: flex;
  flex: 1;
  flex-direction: row;
  overflow: hidden;
}

.mat-expansion-panel-header-title,
.mat-expansion-panel-header-description {
  display: flex;
  flex-grow: 1;
  margin-right: 16px;

  [dir='rtl'] & {
    margin-right: 0;
    margin-left: 16px;
  }
}

.mat-expansion-panel-header-description {
  flex-grow: 2;
}

/**
 * Creates the expansion indicator arrow. Done using ::after rather than having
 * additional nodes in the template.
 */
.mat-expansion-indicator::after {
  border-style: solid;
  border-width: 0 2px 2px 0;
  content: '';
  display: inline-block;
  padding: 3px;
  transform: rotate(45deg);
  vertical-align: middle;
}
